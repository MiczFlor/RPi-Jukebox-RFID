#!/bin/bash

# This shell script contains all the functionality to control
# playout and change volume and the like.
# This script is called from the web app and the bash script.
# The purpose is to have all playout logic in one place, this
# makes further development and potential replacement of 
# the playout player easier.

# USAGE EXAMPLES:
# 
# shutdown RPi:
# ./playout_controls.sh -c=shutdown
# 
# set volume to 80%
# ./playout_controls.sh -c=setvolume -v=80
#
# VALID COMMANDS:
# shutdown
# reboot
# setvolume
# volumeup
# volumedown
# playerstop
# playernext
# playerprev
# playerpause
# playerplay
# playerreplay

# SET VARIABLES
# Here you can tweak the commands a little

# amixer default sound device (e.g. PCM, MASTER)
DEVICE=PCM

#############################################################

# Get args from command line (see Usage above)
for i in "$@"
do
case $i in
    -c=*|--command=*)
    COMMAND="${i#*=}"
    ;;
    -v=*|--value=*)
    VALUE="${i#*=}"
    ;;
esac
done

if [ $COMMAND == "shutdown" ]
then
    sudo halt

elif [ $COMMAND == "reboot" ]
then
    sudo reboot

elif [ $COMMAND == "mute" ]
then
    amixer sset \'$DEVICE\' 0%

elif [ $COMMAND == "setvolume" ]
then
    amixer sset \'$DEVICE\' $VALUE%

elif [ $COMMAND == "volumeup" ]
then
    amixer sset \'$DEVICE\' 500+

elif [ $COMMAND == "volumedown" ]
then
    amixer sset \'$DEVICE\' 500-

elif [ $COMMAND == "playerstop" ]
then
    # kill all running VLC media players
    sudo pkill vlc

# for controlling VLC over rc, see:  
# https://n0tablog.wordpress.com/2009/02/09/controlling-vlc-via-rc-remote-control-interface-using-a-unix-domain-socket-and-no-programming/

elif [ $COMMAND == "playernext" ]
then
    # play next track in playlist (==folder)
    echo "next" | nc.openbsd -w 1 localhost 4212

elif [ $COMMAND == "playerprev" ]
then
    # play previous track in playlist (==folder)
    echo "prev" | nc.openbsd -w 1 localhost 4212

elif [ $COMMAND == "playerpause" ]
then
    # pause current track
    echo "pause" | nc.openbsd -w 1 localhost 4212

elif [ $COMMAND == "playerplay" ]
then
    # play / resume current track
    echo "play" | nc.openbsd -w 1 localhost 4212

elif [ $COMMAND == "playerreplay" ]
then
    # start the playing track from beginning
    echo "seek 0" | nc.openbsd -w 1 localhost 4212

else
    echo Unknown COMMAND $COMMAND VALUE $VALUE
fi
